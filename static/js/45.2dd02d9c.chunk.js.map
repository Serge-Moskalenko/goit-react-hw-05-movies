{"version":3,"file":"static/js/45.2dd02d9c.chunk.js","mappings":"qOACaA,EAAb,WACE,cAAe,eACbC,KAAKC,IAAM,gCACXD,KAAKE,IAAM,mCACXF,KAAKG,YAAc,GACnBH,KAAKI,KAAO,EACZJ,KAAKK,QAAU,IAChB,CAPH,4EAQE,WAAiBC,GAAjB,2FAEUC,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,KAAKE,IACdQ,SAAS,QACTC,MAAOL,EACPF,KAAM,EACNQ,eAAe,IAEXC,EATV,UASuBb,KAAKC,IAT5B,wBAS+CM,GAT/C,SAUuBO,EAAAA,EAAAA,IAAUD,GAVjC,cAUUE,EAVV,yBAWWA,GAXX,gCAaIC,QAAQC,IAAI,KAAMC,SAbtB,yDARF,iHAyBE,WAAgBC,GAAhB,yFAEUN,EAFV,UAEuBb,KAAKC,IAF5B,iBAEwCkB,EAFxC,oBAEsDnB,KAAKE,KAF3D,SAGuBY,EAAAA,EAAAA,IAAUD,GAHjC,cAGUE,EAHV,yBAIWA,GAJX,gCAMIC,QAAQC,IAAI,KAAMC,SANtB,yDAzBF,oHAkCE,sGAEUL,EAFV,UAEuBb,KAAKC,IAF5B,sCAE6DD,KAAKE,KAFlE,SAGuBY,EAAAA,EAAAA,IAAUD,GAHjC,cAGUE,EAHV,yBAIWA,GAJX,gCAMIC,QAAQC,IAAI,KAAMC,SANtB,yDAlCF,mHA2CE,WAAmBC,GAAnB,2FAEUZ,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,KAAKE,IACdQ,SAAS,QACTN,KAAM,IAEFS,EAPV,UAOuBb,KAAKC,IAP5B,iBAOwCkB,EAPxC,oBAOsDZ,GAPtD,SAQuBO,EAAAA,EAAAA,IAAUD,GARjC,cAQUE,EARV,yBASWA,GATX,gCAWIC,QAAQC,IAAI,KAAMC,SAXtB,yDA3CF,iHA0DE,WAAgBC,GAAhB,yFAGYN,EAHZ,UAGyBb,KAAKC,IAH9B,iBAG0CkB,EAH1C,4BAGgEnB,KAAKE,KAHrE,SAIuBY,EAAAA,EAAAA,IAAUD,GAJjC,cAIUE,EAJV,yBAMaA,GANb,gCASIC,QAAQC,IAAI,KAAMC,SATtB,yDA1DF,wEAsEE,WACE,OAAOlB,KAAKG,WACb,EAxEH,IAyEE,SAAUiB,GACRpB,KAAKG,YAAciB,CACpB,GA3EH,mBA4EE,WACE,OAAOpB,KAAKK,OACb,EA9EH,IA+EE,SAAYgB,GACVrB,KAAKK,QAAUgB,CAChB,GAjFH,uBAkFE,WACErB,KAAKI,KAAO,CACb,KApFH,I,0LCCakB,EAAa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAkBC,EAAgB,EAAxBT,KAAQS,QAC3C,OAAQ,wBAAKA,EAAQC,KAAI,SAAAC,GAAC,OAAI,yBAC1B,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEP,IAAMS,MAAO,CAAEC,KAAMN,GAA5C,SAAyDG,EAAEI,SADxBJ,EAAEP,GAAf,KAG7B,ECAKY,EAAM,IAAIhC,EAAAA,EAGHiC,EAAO,WAEhB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAYC,EAAAA,EAAAA,SAAO,GACnBd,GAAWe,EAAAA,EAAAA,MAEjB,IAAKF,EAAUG,QAAS,CAAC,IACN1B,EADK,mCACpB,sGAC2BkB,EAAIS,eAD/B,gBACYzB,EADZ,EACYA,KACRoB,EAAUpB,GAFd,2CADoB,qDAKpBqB,EAAUG,SAAU,EACpB1B,GACH,CAED,OACI,2BAEI,gCACI,2CACCqB,IAAU,SAACZ,EAAD,CAAYP,KAAMmB,EAAQX,SAAUA,QAI9D,EAED,G","sources":["ApiServise.js","components/MoviesCard/MoviesCard.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nexport class ApiServise {\n  constructor() {\n    this.url = 'https://api.themoviedb.org/3/';\n    this.key = '411d08d89a4569fb1b50aec07ee6fb72';\n    this.searchQuery = '';\n    this.page = 1;\n    this.idMovie = null;\n  }\n  async fetchMovie(movie) {\n    try {\n      const searchParams = new URLSearchParams({\n        api_key: this.key,\n        language:'en-US',\n        query: movie,\n        page: 1,\n        include_adult: false,\n      });\n      const request = `${this.url}search/movie?${searchParams}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  async fetchById(id) {\n    try {\n      const request = `${this.url}movie/${id}?api_key=${this.key}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  async fetchDefault() {\n    try {\n      const request = `${this.url}trending/movie/day?api_key=${this.key}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  async fetchReviews(id) {\n    try {\n      const searchParams = new URLSearchParams({\n        api_key: this.key,\n        language:'en-US',\n        page: 1,\n      });\n      const request = `${this.url}movie/${id}/reviews?${searchParams}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  async fetchCast(id) {\n    try {\n    \n        const request = `${this.url}movie/${id}/credits?api_key=${this.key}`;\n      const data = await axios.get(request);\n    \n        return data;\n\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n  get movieId() {\n    return this.idMovie;\n  }\n  set movieId(movieId) {\n    this.idMovie = movieId;\n  }\n  resetPage() {\n    this.page = 1;\n  }\n};","import { Link } from \"react-router-dom\";\n\nexport const MoviesCard = ({ location, data: { results } }) => {\n    return (<ul>{results.map(i => <li key={i.id}>\n        <Link to={`/movies/${i.id}`} state={{ from: location }}>{i.title}</Link>\n    </li>)}</ul>);\n};\n","import { useLocation } from \"react-router-dom\";\nimport { ApiServise } from \"ApiServise\";\nimport { useState, useRef } from \"react\";\nimport { MoviesCard } from \"components/MoviesCard/MoviesCard\";\n\n\nconst Api = new ApiServise();\n\n\nexport const Home = () => {\n\n    const [movies, setMovies] = useState(null);\n    const isMounted = useRef(false);\n    const location = useLocation();\n\n    if (!isMounted.current) {\n        async function request() {\n            const { data } = await Api.fetchDefault();\n            setMovies(data)\n        };\n        isMounted.current = true;\n        request()\n    };\n\n    return (\n        <main>\n\n            <section>\n                <h1>Trending todey</h1>\n                {movies && <MoviesCard data={movies} location={location} />}\n            </section>\n        </main>\n    )\n};\n\nexport default Home"],"names":["ApiServise","this","url","key","searchQuery","page","idMovie","movie","searchParams","URLSearchParams","api_key","language","query","include_adult","request","axios","data","console","log","message","id","newQuery","movieId","MoviesCard","location","results","map","i","to","state","from","title","Api","Home","useState","movies","setMovies","isMounted","useRef","useLocation","current","fetchDefault"],"sourceRoot":""}