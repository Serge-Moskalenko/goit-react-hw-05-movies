{"version":3,"file":"static/js/201.698bf5da.chunk.js","mappings":"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","sources":["ApiServise.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","components/MoviesGalery/ImageGalleryItem.styled.js","components/MoviesGalery/MoviesItem.jsx","components/MoviesGalery/ImageGallery.styled.js","components/MoviesGalery/MoviesGalery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nexport class ApiServise {\n  constructor() {\n    this.url = 'https://api.themoviedb.org/3/';\n    this.key = '411d08d89a4569fb1b50aec07ee6fb72';\n    this.searchQuery = '';\n    this.page = 1;\n    this.idMovie = null;\n  }\n  async fetchMovie(movie) {\n    try {\n      const searchParams = new URLSearchParams({\n        api_key: this.key,\n        language:'en-US',\n        query: movie,\n        page: 1,\n        include_adult: false,\n      });\n      const request = `${this.url}search/movie?${searchParams}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n  async fetchById(id) {\n    try {\n      const request = `${this.url}movie/${id}?api_key=${this.key}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  async fetchDefault() {\n    try {\n      const request = `${this.url}trending/movie/day?api_key=${this.key}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  async fetchReviews(id) {\n    try {\n      const searchParams = new URLSearchParams({\n        api_key: this.key,\n        language:'en-US',\n        page: 1,\n      });\n      const request = `${this.url}movie/${id}/reviews?${searchParams}`;\n      const data = await axios.get(request);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  async fetchCast(id) {\n    try {\n    \n        const request = `${this.url}movie/${id}/credits?api_key=${this.key}`;\n      const data = await axios.get(request);\n    \n        return data;\n\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n  get movieId() {\n    return this.idMovie;\n  }\n  set movieId(movieId) {\n    this.idMovie = movieId;\n  }\n  resetPage() {\n    this.page = 1;\n  }\n};","import styled from \"@emotion/styled\";\nimport { Field,Form} from \"formik\";\n\n\nexport const HeaderStyled = styled.header`\ntop: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n`\n\nexport const FormStyled = styled(Form)`\ndisplay: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`\n\nexport const Input = styled(Field)`\ndisplay: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n&::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`\n\nexport const Error = styled.p`\npadding:0;\nmargin:0;\ncolor:red;\n\nfont-size:18px;\n`\nexport const Button = styled.button`\n\n display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n  opacity: 1;\n}\n`\n\n","import { HeaderStyled, Input, Error, Button, FormStyled,} from \"./SearchMovies.styled\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport { ImSearch } from 'react-icons/im';\nimport * as yup from 'yup';\n\nlet schema = yup.object().shape({\n  searchInput: yup.string().required(),\n});\n\n\n\nexport const SearchMovies = ( {query,input} ) => {\n    \n    const handleSubmit = (value ) => {\n        const { searchInput } = value;\n\n        if (searchInput.trim() === '') {\n            alert('Заполните поле поиска')\n            return;\n        }\n        query(searchInput) \n    };\n\n    return (\n        <HeaderStyled >\n            <Formik initialValues={{ searchInput:input}} validationSchema={schema} onSubmit={handleSubmit}  >\n                <FormStyled>\n                    <Button type=\"submit\"  >\n                        <ImSearch />\n                    </Button>\n\n                    <Input\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        name=\"searchInput\"\n                    />\n                    <ErrorMessage component={Error} name=\"searchInput\" />\n                </FormStyled>\n            </Formik>\n        </HeaderStyled>\n    )\n};","import styled from \"@emotion/styled\";\n\nexport const LiStyled = styled.li`\nborder-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`\n\nexport const ImgStyled = styled.img`\n width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n  transform: scale(1.03);\n  cursor: zoom-in;\n`","import { ImgStyled, LiStyled } from \"./ImageGalleryItem.styled\";\n\nexport const MoviesItem = ({ id, path, name, date }) => (\n    <LiStyled id={id}>\n        <ImgStyled src={path} alt={name} />\n        <h2> {name} </h2>\n        <p> { new Date(date).getFullYear() } </p>\n    </LiStyled>\n);","import styled from \"@emotion/styled\";\n\nexport const ImageGalleryStyled = styled.ul`\n\ndisplay: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`","import {MoviesItem} from './MoviesItem'\nimport { ImageGalleryStyled } from \"./ImageGallery.styled\";\nimport { Link } from 'react-router-dom';\n\nexport const MoviesGalery= ({ data,location}) => {\n    \n    const url = 'https://image.tmdb.org/t/p/w500';\n\n    return (<ImageGalleryStyled >{data.map(({ id, title, poster_path, release_date }) =>\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n        <MoviesItem\n            \n            id={id}\n            path={url + poster_path}\n            name={title}\n            date={release_date}\n            />\n            </Link>\n        \n    )\n        \n    }</ImageGalleryStyled >)\n};","import { useState} from 'react';\nimport {  useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport { ApiServise } from 'ApiServise';\nimport { MoviesGalery } from 'components/MoviesGalery/MoviesGalery';\n\nconst Api = new ApiServise();\n\nexport const Movies = () => {\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get('query') ?? '';\n\n    const queryParameter = q => {\n        if (searchQuery !== q) {\n            setSearchParams(q !== '' ? { query: q } : {});\n        }\n    };\n\n    Api.fetchMovie(searchQuery).then(({ data: { results } }) => { setMovie(results) });\n\n    return (<main>\n        <div>\n            <SearchMovies query={queryParameter} input={searchQuery} />\n            {movie && <MoviesGalery data={movie} location={location} />}\n        </div>\n     \n    </main>);\n};\n\nexport default Movies\n"],"names":["ApiServise","this","url","key","searchQuery","page","idMovie","movie","searchParams","URLSearchParams","api_key","language","query","include_adult","request","axios","data","console","log","message","id","newQuery","movieId","HeaderStyled","styled","FormStyled","Form","Input","Field","Error","Button","schema","yup","shape","searchInput","required","SearchMovies","input","initialValues","validationSchema","onSubmit","value","trim","alert","type","autoComplete","autoFocus","placeholder","name","component","LiStyled","ImgStyled","MoviesItem","path","date","src","alt","Date","getFullYear","ImageGalleryStyled","MoviesGalery","location","map","title","poster_path","release_date","to","state","from","Api","Movies","useState","setMovie","useLocation","useSearchParams","setSearchParams","get","fetchMovie","then","results","q"],"sourceRoot":""}